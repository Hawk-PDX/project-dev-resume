name: project-dev-resume
services:
  - name: backend
    dockerfile_path: Dockerfile.backend
    source_dir: backend
    github:
      branch: main
      deploy_on_push: true
    health_check:
      http_path: /api/health
      initial_delay_seconds: 30
      period_seconds: 60
    instance_size_slug: basic-xxs
    instance_count: 1
    envs:
      - key: FLASK_ENV
        value: production
      - key: SECRET_KEY
        value: "964d735331826bab42274ff6901eac52366eb0f406aa78fb6501a6052ac67069"
      - key: DATABASE_URL
        value: ${portfolio-db.DATABASE_URL}
      - key: ALLOWED_ORIGINS
        value: ${app.frontend.PUBLIC_URL}

  - name: frontend
    dockerfile_path: Dockerfile.frontend
    source_dir: .
    github:
      branch: main
      deploy_on_push: true
    instance_size_slug: basic-xxs
    instance_count: 1
    routes:
      - path: /
    envs:
      - key: NODE_ENV
        value: production
      - key: VITE_API_URL
        value: ${app.backend.PUBLIC_URL}/api

databases:
  - engine: PG
    name: portfolio-db
    num_nodes: 1
    size: basic-xs
    db_name: portfolio
    db_user: postgres

jobs:
  - name: migrate
    kind: POST_DEPLOY
    git:
      repo_clone_url: ${_self.PUBLIC_URL}
      branch: main
    dockerfile_path: Dockerfile.backend
    envs:
      - key: DATABASE_URL
        value: ${portfolio-db.DATABASE_URL}
      - key: FLASK_APP
        value: run.py
    command: flask db upgrade
  
  - name: seed
    kind: POST_DEPLOY
    git:
      repo_clone_url: ${_self.PUBLIC_URL}
      branch: main
    dockerfile_path: Dockerfile.backend
    envs:
      - key: DATABASE_URL
        value: ${portfolio-db.DATABASE_URL}
      - key: FLASK_APP
        value: run.py
    command: python seed_db.py
