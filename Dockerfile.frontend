# Build stage
FROM node:18-alpine as build

WORKDIR /app

# Copy package files first for better caching
COPY package*.json ./

# Install dependencies with clean npm cache
RUN npm ci && \
    npm cache clean --force

# Copy source files
COPY . .

# Build the application
RUN npm run build

# Production stage
FROM node:18-alpine

WORKDIR /app

# Install system dependencies and serve for production hosting
RUN apk add --no-cache wget && \
    npm install -g serve

# Copy built files from build stage
COPY --from=build /app/dist ./dist

# Expose DigitalOcean's preferred port
EXPOSE 8080

# Add health check
HEALTHCHECK --interval=30s --timeout=3s \
    CMD wget -qO- http://localhost:8080/ || exit 1

# Start the application on port 8080
CMD ["serve", "-s", "dist", "-l", "8080"]